name: Rust Build

on:

  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:

  CARGO_TERM_COLOR: always

jobs:

  build:

    strategy:
      matrix:
        os: [ubuntu, macos, windows]

    runs-on: ${{ matrix.os }}-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    #- name: Install clippy from rust toolchain
    #  uses: actions-rs/toolchain@v1
    #  with:
    #    toolchain: stable
    #    default: true
    #    profile: minimal # minimal component installation (ie, no documentation)
    #    components: clippy
    #
    #- name: Run clippy
    #  uses: actions-rs/cargo@v1
    #  with:
    #    command: clippy
    #    args: --locked --all-targets --all-features

    - if: matrix.os == 'windows'
      name: Build on windows
      run: |
        cargo build --verbose --release --bin=page --bin=Page
        mkdir binaries
        move target\release\page.exe binaries
        move target\release\Page.exe binaries

    - if: matrix.os != 'windows'
      name: Build on ${{ matrix.os }}
      run: |
        cargo build --verbose --release --bin=page --bin=Page
        mkdir binaries
        mv target/release/page binaries
        mv target/release/Page binaries

    #- name: Run tests
    #  run: cargo test --verbose

    - name: Upload binaries
      uses: actions/upload-artifact@v3
      with:
        name: binaries-${{ matrix.os }}
        path: binaries
        if-no-files-found: error
        retention-days: 7
